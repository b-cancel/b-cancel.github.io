"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeviceFrameset = exports.DeviceOptions = void 0;
var react_1 = __importStar(require("react"));
var DeviceOptions_1 = require("./DeviceOptions");
Object.defineProperty(exports, "DeviceOptions", { enumerable: true, get: function () { return DeviceOptions_1.DeviceOptions; } });
exports.DeviceFrameset = react_1.default.memo(function DeviceFrameset(props) {
    var children = props.children, device = props.device, width = props.width, height = props.height, zoom = props.zoom, restProps = __rest(props
    // @ts-expect-error
    , ["children", "device", "width", "height", "zoom"]);
    // @ts-expect-error
    var _l = restProps.landscape, _c = restProps.color, divProps = __rest(restProps, ["landscape", "color"]);
    var color = 'color' in props ? props.color : undefined;
    var landscape = 'landscape' in props ? props.landscape : undefined;
    var style = (0, react_1.useMemo)(function () { return (landscape && DeviceOptions_1.DeviceOptions[device].hasLandscape)
        ? ({ width: height, height: width, transform: zoom !== undefined ? "scale(" + zoom + ")" : undefined })
        : ({ width: width, height: height, transform: zoom !== undefined ? "scale(" + zoom + ")" : undefined }); }, [width, height, landscape, device, zoom]);
    return (react_1.default.createElement("div", __assign({ className: "marvel-device " + DeviceOptions_1.DeviceOptions[device].device + " " + (color ? color : '') + " " + (landscape ? 'landscape' : '') }, divProps, { style: style }),
        react_1.default.createElement("div", { className: "inner" }),
        device === 'Galaxy Note 8' ? react_1.default.createElement("div", { className: "overflow" },
            react_1.default.createElement("div", { className: "shadow" })) : null,
        device === 'iPhone X' ? react_1.default.createElement("div", { className: "notch" },
            react_1.default.createElement("div", { className: "camera" }),
            react_1.default.createElement("div", { className: "speaker" })) : null,
        react_1.default.createElement("div", { className: "top-bar" }),
        react_1.default.createElement("div", { className: "sleep" }),
        react_1.default.createElement("div", { className: "bottom-bar" }),
        react_1.default.createElement("div", { className: "volume" }),
        react_1.default.createElement("div", { className: "camera" }),
        react_1.default.createElement("div", { className: "sensor" }),
        react_1.default.createElement("div", { className: "speaker" }),
        react_1.default.createElement("div", { className: "sensors" }),
        react_1.default.createElement("div", { className: "more-sensors" }),
        device === 'iPhone X' ? react_1.default.createElement("div", { className: "overflow" },
            react_1.default.createElement("div", { className: "shadow shadow--tr" }),
            react_1.default.createElement("div", { className: "shadow shadow--tl" }),
            react_1.default.createElement("div", { className: "shadow shadow--br" }),
            react_1.default.createElement("div", { className: "shadow shadow--bl" })) : null,
        react_1.default.createElement("div", { className: "inner-shadow" }),
        react_1.default.createElement("div", { className: "screen" }, children),
        react_1.default.createElement("div", { className: "home" }),
        react_1.default.createElement("div", { className: "bottom-bar" })));
});
