"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Zoomable = void 0;
var react_1 = __importStar(require("react"));
var steps = [
    0,
    1 / 4,
    1 / 3,
    1 / 2,
    2 / 3,
    3 / 4,
    4 / 5,
    9 / 10,
    1,
    11 / 10,
    5 / 4,
    3 / 2,
    7 / 4,
    2 / 1,
    5 / 2,
    3 / 1,
    4 / 1,
    5 / 1,
    Infinity,
];
var toCurrIndex = function (value) {
    return steps.findIndex(function (step) { return step > value; }) - 1;
};
var toPrevIndex = function (value) {
    return steps.findIndex(function (step) { return step > value; }) - 2;
};
var toNextIndex = function (value) { return steps.findIndex(function (step) { return step > value; }); };
var checkReachBound = function (value) {
    if (value === steps[0])
        return steps[1];
    if (value === steps[steps.length - 1])
        return steps[steps.length - 2];
    return value;
};
var toCurr = function (value) {
    return checkReachBound(steps[toCurrIndex(value)]);
};
var toPrev = function (value) {
    return checkReachBound(steps[toPrevIndex(value)]);
};
var toNext = function (value) {
    return checkReachBound(steps[toNextIndex(value)]);
};
exports.Zoomable = react_1.default.memo(function Zoomable(_a) {
    var children = _a.children, props = __rest(_a, ["children"]);
    var _b = (0, react_1.useState)([1, 1]), _c = _b[0], width = _c[0], height = _c[1], setSize = _b[1];
    var _d = (0, react_1.useState)([
        width,
        height,
    ]), _e = _d[0], clientWidth = _e[0], clientHeight = _e[1], setClientSize = _d[1];
    var _f = (0, react_1.useState)(null), container = _f[0], setContainer = _f[1];
    var _g = (0, react_1.useState)(null), zoomContainer = _g[0], setZoomContainer = _g[1];
    var scale = (0, react_1.useMemo)(function () {
        var _a = [width / clientWidth, height / clientHeight], scaleX = _a[0], scaleY = _a[1];
        return Math.min(scaleX, scaleY, 1);
    }, [width, height, clientWidth, clientHeight]);
    var _h = (0, react_1.useState)(null), localScale = _h[0], setLocaleScale = _h[1];
    var realScale = (0, react_1.useMemo)(function () { return toCurr(localScale !== null && localScale !== void 0 ? localScale : scale); }, [localScale, scale]);
    var allowScroll = (0, react_1.useMemo)(function () { return clientWidth / realScale < width || clientHeight / realScale < height; }, [clientHeight, clientWidth, realScale, width, height]);
    var transformStyle = (0, react_1.useMemo)(function () {
        return { transform: "scale(" + realScale + ")" };
    }, [realScale]);
    (0, react_1.useEffect)(function () {
        if (zoomContainer) {
            var syncClientSize_1 = function (el) {
                var clientWidth = el.clientWidth, clientHeight = el.clientHeight;
                clientWidth &&
                    clientHeight &&
                    setClientSize([clientWidth, clientHeight]);
            };
            syncClientSize_1(zoomContainer);
            var option = {};
            var observe = function (entries) {
                for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
                    var entry = entries_1[_i];
                    syncClientSize_1(entry.target);
                }
            };
            var observer_1 = new ResizeObserver(observe);
            observer_1.observe(zoomContainer, option);
            return function () { return observer_1.disconnect(); };
        }
    }, [zoomContainer]);
    (0, react_1.useEffect)(function () {
        if (container) {
            var clientWidth_1 = container.clientWidth, clientHeight_1 = container.clientHeight;
            setSize([clientWidth_1, clientHeight_1]);
        }
    }, [container]);
    return (react_1.default.createElement("div", __assign({}, props, { style: __assign(__assign({}, props.style), { position: "relative" }) }),
        react_1.default.createElement("div", { style: {
                width: "100%",
                height: "100%",
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
                overflow: allowScroll ? "auto" : "hidden",
            }, ref: setContainer },
            react_1.default.createElement("div", { ref: setZoomContainer, style: __assign({ transformOrigin: "center" }, transformStyle) }, children)),
        react_1.default.createElement("div", { style: { position: "absolute", right: "16px", top: "16px" } },
            react_1.default.createElement("span", { onClick: function () { return setLocaleScale(toPrev(realScale)); } }, "-"),
            Math.round(realScale * 100),
            "%",
            react_1.default.createElement("span", { onClick: function () { return setLocaleScale(toNext(realScale)); } }, "+"))));
});
