{"ast":null,"code":"var _jsxFileName = \"/Users/bryancancel/Documents/sourceControl/b-cancel.github.io/react/portfolio/src/tooltips/whiteOnBlack.js\";\nimport React from \"react\";\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\nimport { styled } from \"@mui/material/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WhiteOnBlackToolTip(props) {\n  return styled(({\n    className,\n    ...props\n  }) => /*#__PURE__*/_jsxDEV(Tooltip, { ...props,\n    classes: {\n      popper: className\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this))(({\n    theme\n  }) => ({\n    [`& .${tooltipClasses.tooltip}`]: {\n      maxWidth: \"none\",\n      backgroundColor: \"#e0e0e0\",\n      color: \"#202020\",\n      fontSize: 12\n    }\n  }));\n}\n_c = WhiteOnBlackToolTip;\n\nvar _c;\n\n$RefreshReg$(_c, \"WhiteOnBlackToolTip\");","map":{"version":3,"sources":["/Users/bryancancel/Documents/sourceControl/b-cancel.github.io/react/portfolio/src/tooltips/whiteOnBlack.js"],"names":["React","Tooltip","tooltipClasses","styled","WhiteOnBlackToolTip","props","className","popper","theme","tooltip","maxWidth","backgroundColor","color","fontSize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,IAAkBC,cAAlB,QAAwC,uBAAxC;AACA,SAASC,MAAT,QAAuB,sBAAvB;;AAEA,eAAe,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAC/C,SAAOF,MAAM,CAAC,CAAC;AAAEG,IAAAA,SAAF;AAAa,OAAGD;AAAhB,GAAD,kBACV,QAAC,OAAD,OAAaA,KAAb;AAAoB,IAAA,OAAO,EAAE;AAAEE,MAAAA,MAAM,EAAED;AAAV;AAA7B;AAAA;AAAA;AAAA;AAAA,UADS,CAAN,CAEF,CAAC;AAAEE,IAAAA;AAAF,GAAD,MAAgB;AACjB,KAAE,MAAKN,cAAc,CAACO,OAAQ,EAA9B,GAAkC;AAChCC,MAAAA,QAAQ,EAAE,MADsB;AAEhCC,MAAAA,eAAe,EAAE,SAFe;AAGhCC,MAAAA,KAAK,EAAE,SAHyB;AAIhCC,MAAAA,QAAQ,EAAE;AAJsB;AADjB,GAAhB,CAFE,CAAP;AAUH;KAXuBT,mB","sourcesContent":["import React from \"react\";\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\nimport { styled } from \"@mui/material/styles\";\n\nexport default function WhiteOnBlackToolTip(props) {\n    return styled(({ className, ...props }) => (\n        <Tooltip {...props} classes={{ popper: className }} />\n      ))(({ theme }) => ({\n        [`& .${tooltipClasses.tooltip}`]: {\n          maxWidth: \"none\",\n          backgroundColor: \"#e0e0e0\",\n          color: \"#202020\",\n          fontSize: 12,\n        },\n      }));\n}"]},"metadata":{},"sourceType":"module"}