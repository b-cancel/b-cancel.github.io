{"ast":null,"code":"var _jsxFileName = \"/Users/bryancancel/Documents/sourceControl/b-cancel.github.io/react/portfolio/src/myButton.js\";\nimport React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport MyToolTip from \"./tooltips\"; /// variant, tooltip, color, onClick, suffixIcon, text, startIcon\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyButton(props) {\n  var color = props.color;\n\n  if (color === undefined) {\n    color = props.lightMode === undefined ? \"inherit\" : props.lightMode ? \"#202020\" : \"#e0e0e0\";\n  }\n\n  const child = props.child ? props.child : /*#__PURE__*/_jsxDEV(Typography, {\n    style: {\n      textTransform: \"none\"\n    },\n    color: color,\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n  const computedStyle = props.variant === \"contained\" ? {\n    backgroundColor: color\n  } : {\n    borderColor: color\n  };\n\n  const theButton = /*#__PURE__*/_jsxDEV(Button, {\n    variant: props.variant,\n    onClick: props.onClick,\n    startIcon: props.prefixIcon,\n    endIcon: props.suffixIcon,\n    style: computedStyle,\n    sx: props.sx,\n    children: child\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n\n  var buttonWithToolTip = theButton;\n  const stringLength = props.tooltip ? props.tooltip.length : 0;\n  const hasTooltip = stringLength !== 0;\n  const toolTipPosition = props.lightMode ? \"bottom\" : \"top\";\n\n  if (hasTooltip || props.repoIsPrivate) {\n    buttonWithToolTip = props.repoIsPrivate ? /*#__PURE__*/_jsxDEV(MyToolTip, {\n      title: \"Private Repository\",\n      TransitionComponent: Zoom,\n      placement: toolTipPosition,\n      child: theButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this) : props.lightMode ? /*#__PURE__*/_jsxDEV(MyToolTip, {\n      title: props.tooltip,\n      TransitionComponent: Zoom,\n      placement: toolTipPosition,\n      child: theButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(MyToolTip, {\n      title: props.tooltip,\n      TransitionComponent: Zoom,\n      placement: toolTipPosition,\n      child: theButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this); //black on white above\n  }\n\n  if (props.src) {\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      href: props.src,\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      children: buttonWithToolTip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  } else {\n    return buttonWithToolTip;\n  }\n}\n_c = MyButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyButton\");","map":{"version":3,"sources":["/Users/bryancancel/Documents/sourceControl/b-cancel.github.io/react/portfolio/src/myButton.js"],"names":["React","Typography","Button","MyToolTip","MyButton","props","color","undefined","lightMode","child","textTransform","text","computedStyle","variant","backgroundColor","borderColor","theButton","onClick","prefixIcon","suffixIcon","sx","buttonWithToolTip","stringLength","tooltip","length","hasTooltip","toolTipPosition","repoIsPrivate","Zoom","src"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport MyToolTip from \"./tooltips\";\n\n/// variant, tooltip, color, onClick, suffixIcon, text, startIcon\nexport default function MyButton(props) {\n  var color = props.color;\n  if(color === undefined){\n    color = props.lightMode === undefined ? \"inherit\" : (props.lightMode ? \"#202020\" : \"#e0e0e0\");\n  }\n\n  const child = props.child ? (\n    props.child\n  ) : (\n    <Typography style={{ textTransform: \"none\" }} color={color}>\n      {props.text}\n    </Typography>\n  );\n\n  const computedStyle =\n    props.variant === \"contained\"\n      ? {\n          backgroundColor: color,\n        }\n      : {\n          borderColor: color,\n        };\n\n  const theButton = (\n    <Button\n      variant={props.variant}\n      onClick={props.onClick}\n      startIcon={props.prefixIcon}\n      endIcon={props.suffixIcon}\n      style={computedStyle}\n      sx={props.sx}\n    >\n      {child}\n    </Button>\n  );\n\n  var buttonWithToolTip = theButton;\n  const stringLength = props.tooltip ? props.tooltip.length : 0;\n  const hasTooltip = stringLength !== 0;\n  const toolTipPosition = props.lightMode ? \"bottom\" : \"top\";\n  if (hasTooltip || props.repoIsPrivate) {\n    buttonWithToolTip = props.repoIsPrivate ? (\n      <MyToolTip\n        title=\"Private Repository\"\n        TransitionComponent={Zoom}\n        placement={toolTipPosition} \n        child={theButton} />\n    ) : props.lightMode ? (\n      <MyToolTip\n        title={props.tooltip}\n        TransitionComponent={Zoom}\n        placement={toolTipPosition}\n        child={theButton} />\n    ) : (\n      <MyToolTip\n        title={props.tooltip}\n        TransitionComponent={Zoom}\n        placement={toolTipPosition}\n        child={theButton} />\n    );\n    //black on white above\n  }\n\n  if (props.src) {\n    return (\n      <a href={props.src} target=\"_blank\" rel=\"noreferrer\">\n        {buttonWithToolTip}\n      </a>\n    );\n  } else {\n    return buttonWithToolTip;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}