{"ast":null,"code":"var _jsxFileName = \"/Users/bryancancel/Documents/sourceControl/b-cancel.github.io/react/portfolio/src/myIconButton.js\";\nimport React from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\nimport { styled } from \"@mui/material/styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Zoom from \"@mui/material/Zoom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WhiteOnBlackToolTip = styled(({\n  className,\n  ...props\n}) => /*#__PURE__*/_jsxDEV(Tooltip, { ...props,\n  classes: {\n    popper: className\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this))(({\n  theme\n}) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    maxWidth: \"none\",\n    backgroundColor: \"black\",\n    color: \"white\",\n    fontSize: 12\n  }\n}));\nconst BlackOnWhiteTooltip = styled(({\n  className,\n  ...props\n}) => /*#__PURE__*/_jsxDEV(Tooltip, { ...props,\n  classes: {\n    popper: className\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 3\n}, this))(({\n  theme\n}) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    maxWidth: \"none\",\n    backgroundColor: \"white\",\n    color: \"black\",\n    fontSize: 12\n  }\n})); /// tooltip, color, onClick, icon\n\nexport default function MyIconButton(props) {\n  const color = props.lightMode ? \"black\" : \"white\";\n\n  const iconButton = /*#__PURE__*/_jsxDEV(\"a\", {\n    href: props.src,\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    children: /*#__PURE__*/_jsxDEV(IconButton, {\n      color: color,\n      \"aria-label\": props.tooltip,\n      component: \"span\",\n      onClick: props.onClick,\n      sx: props.sx,\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: props.icon,\n        color: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n\n  if (props.lightMode) {\n    return /*#__PURE__*/_jsxDEV(WhiteOnBlackToolTip, {\n      title: props.tooltip,\n      TransitionComponent: Zoom,\n      placement: \"top\",\n      children: iconButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(BlackOnWhiteTooltip, {\n      title: props.tooltip,\n      TransitionComponent: Zoom,\n      placement: \"top\",\n      children: iconButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this);\n  }\n}\n_c = MyIconButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyIconButton\");","map":{"version":3,"sources":["/Users/bryancancel/Documents/sourceControl/b-cancel.github.io/react/portfolio/src/myIconButton.js"],"names":["React","IconButton","Tooltip","tooltipClasses","styled","FontAwesomeIcon","Zoom","WhiteOnBlackToolTip","className","props","popper","theme","tooltip","maxWidth","backgroundColor","color","fontSize","BlackOnWhiteTooltip","MyIconButton","lightMode","iconButton","src","onClick","sx","icon"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,IAAkBC,cAAlB,QAAwC,uBAAxC;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;AAEA,MAAMC,mBAAmB,GAAGH,MAAM,CAAC,CAAC;AAAEI,EAAAA,SAAF;AAAa,KAAGC;AAAhB,CAAD,kBACjC,QAAC,OAAD,OAAaA,KAAb;AAAoB,EAAA,OAAO,EAAE;AAAEC,IAAAA,MAAM,EAAEF;AAAV;AAA7B;AAAA;AAAA;AAAA;AAAA,QADgC,CAAN,CAEzB,CAAC;AAAEG,EAAAA;AAAF,CAAD,MAAgB;AACjB,GAAE,MAAKR,cAAc,CAACS,OAAQ,EAA9B,GAAkC;AAChCC,IAAAA,QAAQ,EAAE,MADsB;AAEhCC,IAAAA,eAAe,EAAE,OAFe;AAGhCC,IAAAA,KAAK,EAAE,OAHyB;AAIhCC,IAAAA,QAAQ,EAAE;AAJsB;AADjB,CAAhB,CAFyB,CAA5B;AAWA,MAAMC,mBAAmB,GAAGb,MAAM,CAAC,CAAC;AAAEI,EAAAA,SAAF;AAAa,KAAGC;AAAhB,CAAD,kBACjC,QAAC,OAAD,OAAaA,KAAb;AAAoB,EAAA,OAAO,EAAE;AAAEC,IAAAA,MAAM,EAAEF;AAAV;AAA7B;AAAA;AAAA;AAAA;AAAA,QADgC,CAAN,CAEzB,CAAC;AAAEG,EAAAA;AAAF,CAAD,MAAgB;AACjB,GAAE,MAAKR,cAAc,CAACS,OAAQ,EAA9B,GAAkC;AAChCC,IAAAA,QAAQ,EAAE,MADsB;AAEhCC,IAAAA,eAAe,EAAE,OAFe;AAGhCC,IAAAA,KAAK,EAAE,OAHyB;AAIhCC,IAAAA,QAAQ,EAAE;AAJsB;AADjB,CAAhB,CAFyB,CAA5B,C,CAWA;;AACA,eAAe,SAASE,YAAT,CAAsBT,KAAtB,EAA6B;AAC1C,QAAMM,KAAK,GAAGN,KAAK,CAACU,SAAN,GAAkB,OAAlB,GAA4B,OAA1C;;AACA,QAAMC,UAAU,gBACd;AAAG,IAAA,IAAI,EAAEX,KAAK,CAACY,GAAf;AAAoB,IAAA,MAAM,EAAC,QAA3B;AAAoC,IAAA,GAAG,EAAC,YAAxC;AAAA,2BACE,QAAC,UAAD;AACE,MAAA,KAAK,EAAEN,KADT;AAEE,oBAAYN,KAAK,CAACG,OAFpB;AAGE,MAAA,SAAS,EAAC,MAHZ;AAIE,MAAA,OAAO,EAAEH,KAAK,CAACa,OAJjB;AAKE,MAAA,EAAE,EAAEb,KAAK,CAACc,EALZ;AAAA,6BAOE,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAEd,KAAK,CAACe,IAA7B;AAAmC,QAAA,KAAK,EAAET;AAA1C;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;;AAcA,MAAIN,KAAK,CAACU,SAAV,EAAqB;AACnB,wBACE,QAAC,mBAAD;AACE,MAAA,KAAK,EAAEV,KAAK,CAACG,OADf;AAEE,MAAA,mBAAmB,EAAEN,IAFvB;AAGE,MAAA,SAAS,EAAC,KAHZ;AAAA,gBAKGc;AALH;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAVD,MAUO;AACL,wBACE,QAAC,mBAAD;AACE,MAAA,KAAK,EAAEX,KAAK,CAACG,OADf;AAEE,MAAA,mBAAmB,EAAEN,IAFvB;AAGE,MAAA,SAAS,EAAC,KAHZ;AAAA,gBAKGc;AALH;AAAA;AAAA;AAAA;AAAA,YADF;AASD;AACF;KArCuBF,Y","sourcesContent":["import React from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\nimport { styled } from \"@mui/material/styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Zoom from \"@mui/material/Zoom\";\n\nconst WhiteOnBlackToolTip = styled(({ className, ...props }) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    maxWidth: \"none\",\n    backgroundColor: \"black\",\n    color: \"white\",\n    fontSize: 12,\n  },\n}));\n\nconst BlackOnWhiteTooltip = styled(({ className, ...props }) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    maxWidth: \"none\",\n    backgroundColor: \"white\",\n    color: \"black\",\n    fontSize: 12,\n  },\n}));\n\n/// tooltip, color, onClick, icon\nexport default function MyIconButton(props) {\n  const color = props.lightMode ? \"black\" : \"white\";\n  const iconButton = (\n    <a href={props.src} target=\"_blank\" rel=\"noreferrer\">\n      <IconButton\n        color={color}\n        aria-label={props.tooltip}\n        component=\"span\"\n        onClick={props.onClick}\n        sx={props.sx}\n      >\n        <FontAwesomeIcon icon={props.icon} color={color}/>\n      </IconButton>\n    </a>\n  );\n\n  if (props.lightMode) {\n    return (\n      <WhiteOnBlackToolTip\n        title={props.tooltip}\n        TransitionComponent={Zoom}\n        placement=\"top\"\n      >\n        {iconButton}\n      </WhiteOnBlackToolTip>\n    );\n  } else {\n    return (\n      <BlackOnWhiteTooltip\n        title={props.tooltip}\n        TransitionComponent={Zoom}\n        placement=\"top\"\n      >\n        {iconButton}\n      </BlackOnWhiteTooltip>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}