{"ast":null,"code":"var _jsxFileName = \"/Users/bryancancel/Documents/sourceControl/b-cancel.github.io/react/portfolio/src/tooltips.js\";\nimport React from \"react\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Zoom from '@mui/material/Zoom'; ///child\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyToolTip(props) {\n  return /*#__PURE__*/_jsxDEV(Tooltip, {\n    title: props.title,\n    TransitionComponent: Zoom,\n    placement: props.placement,\n    className: props.className,\n    children: props.child\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n/*\nexport const WhiteOnBlack = styled(({ className, ...props }) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    maxWidth: \"none\",\n    backgroundColor: \"#e0e0e0\",\n    color: \"#202020\",\n    fontSize: 12,\n  },\n}));\n\nexport const BlackOnWhite = styled(({ className, ...props }) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    maxWidth: \"none\",\n    backgroundColor: \"#e0e0e0\",\n    color: \"#202020\",\n    fontSize: 12,\n  },\n}));\n\nexport const WhiteOnRed = styled(({ className, ...props }) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    maxWidth: \"none\",\n    backgroundColor: \"red\",\n    color: \"white\",\n    fontSize: 14,\n    fontWeight: \"bold\",\n  },\n}));\n*/\n\n_c = MyToolTip;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyToolTip\");","map":{"version":3,"sources":["/Users/bryancancel/Documents/sourceControl/b-cancel.github.io/react/portfolio/src/tooltips.js"],"names":["React","Tooltip","Zoom","MyToolTip","props","title","placement","className","child"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,IAAP,MAAiB,oBAAjB,C,CAEA;;;AACA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACrC,sBACI,QAAC,OAAD;AAAS,IAAA,KAAK,EAAEA,KAAK,CAACC,KAAtB;AAA6B,IAAA,mBAAmB,EAAEH,IAAlD;AAAwD,IAAA,SAAS,EAAEE,KAAK,CAACE,SAAzE;AAAoF,IAAA,SAAS,EAAEF,KAAK,CAACG,SAArG;AAAA,cACKH,KAAK,CAACI;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KA3CwBL,S","sourcesContent":["import React from \"react\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport Zoom from '@mui/material/Zoom';\n\n///child\nexport default function MyToolTip(props) {\n    return (\n        <Tooltip title={props.title} TransitionComponent={Zoom} placement={props.placement} className={props.className}>\n            {props.child}\n        </Tooltip>\n      );\n}\n\n\n/*\nexport const WhiteOnBlack = styled(({ className, ...props }) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    maxWidth: \"none\",\n    backgroundColor: \"#e0e0e0\",\n    color: \"#202020\",\n    fontSize: 12,\n  },\n}));\n\nexport const BlackOnWhite = styled(({ className, ...props }) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    maxWidth: \"none\",\n    backgroundColor: \"#e0e0e0\",\n    color: \"#202020\",\n    fontSize: 12,\n  },\n}));\n\nexport const WhiteOnRed = styled(({ className, ...props }) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    maxWidth: \"none\",\n    backgroundColor: \"red\",\n    color: \"white\",\n    fontSize: 14,\n    fontWeight: \"bold\",\n  },\n}));\n*/\n"]},"metadata":{},"sourceType":"module"}