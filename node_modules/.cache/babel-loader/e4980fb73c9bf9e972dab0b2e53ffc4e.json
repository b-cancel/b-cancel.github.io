{"ast":null,"code":"var _jsxFileName = \"/Users/bryancancel/Documents/sourceControl/b-cancel.github.io/react/portfolio/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SideBar from \"./sidebar\";\nimport Gallery from \"./gallery.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.childRef = /*#__PURE__*/React.createRef();\n  } //now that everything is loaded...\n\n\n  componentDidMount() {\n    console.log(\"App mounted\"); //this.childRef.current.openMenu();\n  }\n\n  render() {\n    const gallery = /*#__PURE__*/_jsxDEV(Gallery, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(ReloadingApp, {\n      child: gallery,\n      ref: this.childRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nclass ReloadingApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuOpen: false\n    };\n  } // This keeps your state in sync with the opening/closing of the menu\n  // via the default means, e.g. clicking the X, pressing the ESC key etc.\n\n\n  handleStateChange(state) {\n    console.log(\"STATE CHANGED TO: \" + state.isOpen);\n    this.setState({\n      menuOpen: state.isOpen\n    });\n\n    if (state.isOpen) {\n      window.openTheMenu();\n    } else {\n      window.closeTheMenu();\n    }\n  } // This can be used to close the menu, e.g. when a user clicks a menu item\n\n\n  closeMenu() {\n    console.log(\"TRYING TO CLOSE MENU\");\n    this.setState({\n      menuOpen: false\n    });\n  }\n\n  openMenu() {\n    console.log(\"TRYING TO OPEN MENU\");\n    this.setState({\n      menuOpen: true\n    });\n  } //<Menu isOpen={ true } />\n  //<Menu  />\n  //<Menu onClose={ handleOnClose } />\n  //<Menu onOpen={ handleOnOpen } />\n  // This can be used to toggle the menu, e.g. when using a custom icon\n  // Tip: You probably want to hide either/both default icons if using a custom icon\n  // See https://github.com/negomi/react-burger-menu#custom-icons\n\n\n  toggleMenu() {\n    this.setState(state => ({\n      menuOpen: !state.menuOpen\n    }));\n  }\n\n  render() {\n    const sideBarWidth = \"280px\";\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"outer-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"style\", {\n        dangerouslySetInnerHTML: {\n          __html: `\n              .page-wrap-opened {\n                transform: translate3d(0px, 0px, 0px) !important;\n              }\n\n              .page-wrap-closed {\n                transform: translate3d(-${sideBarWidth}, 0px, 0px) !important;\n              }\n              \n              .bm-menu-wrap-opened {\n                display: block !important;\n                transform: translate3d(0px, 0px, 0px) !important;\n              }\n\n              .bm-menu-wrap-closed {\n                transform: translate3d(-100%, 0px, 0px) !important;\n              }\n\n              .bm-overlay-opened {\n                opacity: 1 !important;\n              }\n\n              .bm-overlay-closed {\n                opacity: 0 !important;\n              }\n\n              .other-opened {\n                overflow-x: hidden !important;\n              }\n\n              .other-closed {\n                overflow-x: auto !important;\n              }\n                `\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SideBar, {\n        pageWrapId: \"page-wrap\",\n        isOpen: this.state.menuOpen,\n        onStateChange: state => this.handleStateChange(state),\n        width: sideBarWidth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"page-wrap\",\n        children: this.props.child\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst rootElement = document.getElementById(\"app\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 122,\n  columnNumber: 17\n}, this), rootElement);","map":{"version":3,"sources":["/Users/bryancancel/Documents/sourceControl/b-cancel.github.io/react/portfolio/src/index.js"],"names":["React","ReactDOM","SideBar","Gallery","App","Component","constructor","props","childRef","createRef","componentDidMount","console","log","render","gallery","ReloadingApp","state","menuOpen","handleStateChange","isOpen","setState","window","openTheMenu","closeTheMenu","closeMenu","openMenu","toggleMenu","sideBarWidth","__html","child","rootElement","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport SideBar from \"./sidebar\";\nimport Gallery from \"./gallery.js\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.childRef = React.createRef();\n  }\n\n  //now that everything is loaded...\n  componentDidMount() {\n    console.log(\"App mounted\");\n    //this.childRef.current.openMenu();\n  }\n\n  render() {\n    const gallery = <Gallery />;\n    return <ReloadingApp child={gallery} ref={this.childRef} />;\n  }\n}\n\nclass ReloadingApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuOpen: false,\n    };\n  }\n\n  // This keeps your state in sync with the opening/closing of the menu\n  // via the default means, e.g. clicking the X, pressing the ESC key etc.\n  handleStateChange(state) {\n    console.log(\"STATE CHANGED TO: \" + state.isOpen);\n    this.setState({ menuOpen: state.isOpen });\n    if(state.isOpen){\n      window.openTheMenu();\n    } else {\n      window.closeTheMenu();\n    }\n  }\n\n  // This can be used to close the menu, e.g. when a user clicks a menu item\n  closeMenu() {\n    console.log(\"TRYING TO CLOSE MENU\");\n    this.setState({ menuOpen: false });\n  }\n\n  openMenu() {\n    console.log(\"TRYING TO OPEN MENU\");\n    this.setState({ menuOpen: true });\n  }\n\n  //<Menu isOpen={ true } />\n  //<Menu  />\n  //<Menu onClose={ handleOnClose } />\n  //<Menu onOpen={ handleOnOpen } />\n\n  // This can be used to toggle the menu, e.g. when using a custom icon\n  // Tip: You probably want to hide either/both default icons if using a custom icon\n  // See https://github.com/negomi/react-burger-menu#custom-icons\n  toggleMenu() {\n    this.setState((state) => ({ menuOpen: !state.menuOpen }));\n  }\n\n  render() {\n    const sideBarWidth = \"280px\";\n    return (\n      <div id=\"outer-container\">\n        <style\n            dangerouslySetInnerHTML={{\n              __html: `\n              .page-wrap-opened {\n                transform: translate3d(0px, 0px, 0px) !important;\n              }\n\n              .page-wrap-closed {\n                transform: translate3d(-${sideBarWidth}, 0px, 0px) !important;\n              }\n              \n              .bm-menu-wrap-opened {\n                display: block !important;\n                transform: translate3d(0px, 0px, 0px) !important;\n              }\n\n              .bm-menu-wrap-closed {\n                transform: translate3d(-100%, 0px, 0px) !important;\n              }\n\n              .bm-overlay-opened {\n                opacity: 1 !important;\n              }\n\n              .bm-overlay-closed {\n                opacity: 0 !important;\n              }\n\n              .other-opened {\n                overflow-x: hidden !important;\n              }\n\n              .other-closed {\n                overflow-x: auto !important;\n              }\n                `,\n            }}\n          />\n        <SideBar\n          pageWrapId={\"page-wrap\"}\n          isOpen={this.state.menuOpen}\n          onStateChange={(state) => this.handleStateChange(state)}\n          width={sideBarWidth}\n        />\n        <div id=\"page-wrap\">{this.props.child}</div>\n      </div>\n    );\n  }\n}\n\nconst rootElement = document.getElementById(\"app\");\nReactDOM.render(<App />, rootElement);"]},"metadata":{},"sourceType":"module"}