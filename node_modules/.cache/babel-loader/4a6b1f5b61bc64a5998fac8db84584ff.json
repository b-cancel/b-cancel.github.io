{"ast":null,"code":"var _jsxFileName = \"/Users/bryancancel/Documents/sourceControl/b-cancel.github.io/react/portfolio/src/visible.js\";\nimport React, { Component } from 'react';\nimport Observer from '@researchgate/react-intersection-observer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getPrintableThreshold = (ratio, range) => range.reduce((prev, curr) => Math.abs(curr - ratio) < Math.abs(prev - ratio) ? curr : prev);\n\nexport default class ShowIfVisible extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      visibility: 'hidden',\n      threshold: 0\n    };\n  }\n\n  render() {\n    const desiredThreshold = this.props.threshold;\n    return /*#__PURE__*/_jsxDEV(Observer, {\n      onChange: ({\n        isIntersecting,\n        intersectionRatio\n      }) => {\n        this.setState({\n          visibility: isIntersecting ? 'visible' : 'invisible',\n          threshold: getPrintableThreshold(intersectionRatio.toFixed(2), desiredThreshold)\n        });\n      },\n      threshold: desiredThreshold,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `box ${this.state.visibility}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/bryancancel/Documents/sourceControl/b-cancel.github.io/react/portfolio/src/visible.js"],"names":["React","Component","Observer","getPrintableThreshold","ratio","range","reduce","prev","curr","Math","abs","ShowIfVisible","state","visibility","threshold","render","desiredThreshold","props","isIntersecting","intersectionRatio","setState","toFixed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,2CAArB;;;AAEA,MAAMC,qBAAqB,GAAG,CAACC,KAAD,EAAQC,KAAR,KAC5BA,KAAK,CAACC,MAAN,CAAa,CAACC,IAAD,EAAOC,IAAP,KACXC,IAAI,CAACC,GAAL,CAASF,IAAI,GAAGJ,KAAhB,IAAyBK,IAAI,CAACC,GAAL,CAASH,IAAI,GAAGH,KAAhB,CAAzB,GAAkDI,IAAlD,GAAyDD,IAD3D,CADF;;AAIA,eAAe,MAAMI,aAAN,SAA4BV,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACnDW,KADmD,GAC3C;AACNC,MAAAA,UAAU,EAAE,QADN;AAENC,MAAAA,SAAS,EAAE;AAFL,KAD2C;AAAA;;AAMnDC,EAAAA,MAAM,GAAG;AACP,UAAMC,gBAAgB,GAAG,KAAKC,KAAL,CAAWH,SAApC;AACA,wBACI,QAAC,QAAD;AACA,MAAA,QAAQ,EAAE,CAAC;AAAEI,QAAAA,cAAF;AAAkBC,QAAAA;AAAlB,OAAD,KAA2C;AACnD,aAAKC,QAAL,CAAc;AACZP,UAAAA,UAAU,EAAEK,cAAc,GAAG,SAAH,GAAe,WAD7B;AAEZJ,UAAAA,SAAS,EAAEX,qBAAqB,CAC9BgB,iBAAiB,CAACE,OAAlB,CAA0B,CAA1B,CAD8B,EAE9BL,gBAF8B;AAFpB,SAAd;AAOD,OATD;AAUA,MAAA,SAAS,EAAEA,gBAVX;AAAA,6BAYA;AAAK,QAAA,SAAS,EAAG,OAAM,KAAKJ,KAAL,CAAWC,UAAW;AAA7C;AAAA;AAAA;AAAA;AAAA;AAZA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBD;;AAxBkD","sourcesContent":["import React, { Component } from 'react';\nimport Observer from '@researchgate/react-intersection-observer';\n\nconst getPrintableThreshold = (ratio, range) =>\n  range.reduce((prev, curr) =>\n    Math.abs(curr - ratio) < Math.abs(prev - ratio) ? curr : prev);\n\nexport default class ShowIfVisible extends Component {\n  state = {\n    visibility: 'hidden',\n    threshold: 0,\n  };\n\n  render() {\n    const desiredThreshold = this.props.threshold;\n    return (\n        <Observer\n        onChange={({ isIntersecting, intersectionRatio }) => {\n          this.setState({\n            visibility: isIntersecting ? 'visible' : 'invisible',\n            threshold: getPrintableThreshold(\n              intersectionRatio.toFixed(2),\n              desiredThreshold,\n            ),\n          });\n        }}\n        threshold={desiredThreshold}\n      >\n        <div className={`box ${this.state.visibility}`} />\n      </Observer>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}