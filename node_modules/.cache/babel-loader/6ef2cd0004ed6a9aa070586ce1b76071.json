{"ast":null,"code":"var _jsxFileName = \"/Users/bryancancel/Documents/sourceControl/b-cancel.github.io/react/portfolio/src/index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n/*\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles.css\";\nimport SideBar from \"./sidebar\";\nimport Gallery from \"./gallery.js\"\n\nfunction App() {\n  function onMenuOpen(){\n    window.onMenuOpened();\n  }\n\n  return (\n    <div id=\"outer-container\">\n      <SideBar pageWrapId={\"page-wrap\"}/>\n      <div id=\"page-wrap\">\n        <Gallery/>\n      </div>\n    </div>\n  );\n}\n*/\n//<Menu isOpen={ true } />\n//<Menu width={ '280px' } />\n//<Menu onClose={ handleOnClose } />\n//<Menu onOpen={ handleOnOpen } />\n//TODO: trigger the variable change... then use \n\n/*\nNote: If you want to render the menu open initially, \nyou will need to set this property in your parent component's componentDidMount() function.\nhttps://github.com/negomi/react-burger-menu/wiki/FAQ#i-want-to-control-the-open-state-programmatically-but-i-dont-understand-how-to-use-the-isopen-prop\n*/\nimport React, { useState, useContext } from 'react';\nimport ReactDOM from \"react-dom\";\nimport { slide as Menu } from 'react-burger-menu'; // make a new context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyContext = /*#__PURE__*/React.createContext(); // create the provider\n\nconst MyProvider = props => {\n  _s();\n\n  const [menuOpenState, setMenuOpenState] = useState(false);\n  return /*#__PURE__*/_jsxDEV(MyContext.Provider, {\n    value: {\n      isMenuOpen: menuOpenState,\n      toggleMenu: () => setMenuOpenState(!menuOpenState),\n      stateChangeHandler: newState => setMenuOpenState(newState.isOpen)\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}; // create a navigation component that wraps the burger menu\n\n\n_s(MyProvider, \"XElJTIsjca/S1FDQDIj8/TYpyGs=\");\n\n_c = MyProvider;\n\nconst Navigation = () => {\n  _s2();\n\n  const ctx = useContext(MyContext);\n  return /*#__PURE__*/_jsxDEV(SideBar, {\n    pageWrapId: \"page-wrap\",\n    isOpen: ctx.isMenuOpen,\n    onStateChange: state => ctx.stateChangeHandler(state)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}; // default export here\n\n\n_s2(Navigation, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\n\n_c2 = Navigation;\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(MyProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"outer-container\",\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"page-wrap\",\n        children: /*#__PURE__*/_jsxDEV(Gallery, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = App;\nexport default App;\nconst rootElement = document.getElementById(\"app\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 86,\n  columnNumber: 17\n}, this), rootElement);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MyProvider\");\n$RefreshReg$(_c2, \"Navigation\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/bryancancel/Documents/sourceControl/b-cancel.github.io/react/portfolio/src/index.js"],"names":["React","useState","useContext","ReactDOM","slide","Menu","MyContext","createContext","MyProvider","props","menuOpenState","setMenuOpenState","isMenuOpen","toggleMenu","stateChangeHandler","newState","isOpen","children","Navigation","ctx","state","App","rootElement","document","getElementById","render"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,KAAK,IAAIC,IAAjB,QAA4B,mBAA5B,C,CAEA;;;AACA,MAAMC,SAAS,gBAAGN,KAAK,CAACO,aAAN,EAAlB,C,CAEA;;AACA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,KAAD,CAAlD;AAEA,sBACE,QAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAE;AACzBW,MAAAA,UAAU,EAAEF,aADa;AAEzBG,MAAAA,UAAU,EAAE,MAAMF,gBAAgB,CAAC,CAACD,aAAF,CAFT;AAGzBI,MAAAA,kBAAkB,EAAGC,QAAD,IAAcJ,gBAAgB,CAACI,QAAQ,CAACC,MAAV;AAHzB,KAA3B;AAAA,cAKGP,KAAK,CAACQ;AALT;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAZD,C,CAcA;;;GAdMT,U;;KAAAA,U;;AAeN,MAAMU,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,GAAG,GAAGjB,UAAU,CAACI,SAAD,CAAtB;AAEA,sBACE,QAAC,OAAD;AAAS,IAAA,UAAU,EAAE,WAArB;AAAkC,IAAA,MAAM,EAAEa,GAAG,CAACP,UAA9C;AACA,IAAA,aAAa,EAAGQ,KAAD,IAAWD,GAAG,CAACL,kBAAJ,CAAuBM,KAAvB;AAD1B;AAAA;AAAA;AAAA;AAAA,UADF;AAID,CAPD,C,CASA;;;IATMF,U;;MAAAA,U;;AAUN,MAAMG,GAAG,GAAG,MAAM;AAChB,sBACE,QAAC,UAAD;AAAA,2BACE;AAAK,MAAA,EAAE,EAAC,iBAAR;AAAA,8BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,EAAE,EAAC,WAAR;AAAA,+BACA,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAXD;;MAAMA,G;AAaN,eAAeA,GAAf;AAEA,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAApB;AACArB,QAAQ,CAACsB,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBH,WAAzB","sourcesContent":["/*\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles.css\";\nimport SideBar from \"./sidebar\";\nimport Gallery from \"./gallery.js\"\n\nfunction App() {\n  function onMenuOpen(){\n    window.onMenuOpened();\n  }\n\n  return (\n    <div id=\"outer-container\">\n      <SideBar pageWrapId={\"page-wrap\"}/>\n      <div id=\"page-wrap\">\n        <Gallery/>\n      </div>\n    </div>\n  );\n}\n*/\n\n//<Menu isOpen={ true } />\n//<Menu width={ '280px' } />\n//<Menu onClose={ handleOnClose } />\n//<Menu onOpen={ handleOnOpen } />\n\n//TODO: trigger the variable change... then use \n/*\nNote: If you want to render the menu open initially, \nyou will need to set this property in your parent component's componentDidMount() function.\nhttps://github.com/negomi/react-burger-menu/wiki/FAQ#i-want-to-control-the-open-state-programmatically-but-i-dont-understand-how-to-use-the-isopen-prop\n*/\n\nimport React, { useState, useContext } from 'react'\nimport ReactDOM from \"react-dom\";\nimport {slide as Menu} from 'react-burger-menu'\n\n// make a new context\nconst MyContext = React.createContext();\n\n// create the provider\nconst MyProvider = (props) => {\n  const [menuOpenState, setMenuOpenState] = useState(false)\n  \n  return (\n    <MyContext.Provider value={{\n      isMenuOpen: menuOpenState,\n      toggleMenu: () => setMenuOpenState(!menuOpenState),\n      stateChangeHandler: (newState) => setMenuOpenState(newState.isOpen)\n    }}>\n      {props.children}\n    </MyContext.Provider>\n  )\n}\n\n// create a navigation component that wraps the burger menu\nconst Navigation = () => {\n  const ctx = useContext(MyContext)\n\n  return (\n    <SideBar pageWrapId={\"page-wrap\"} isOpen={ctx.isMenuOpen}\n    onStateChange={(state) => ctx.stateChangeHandler(state)}/>\n  )\n}\n\n// default export here\nconst App = () => {\n  return (\n    <MyProvider>\n      <div id=\"outer-container\">\n        <Navigation />\n        <div id=\"page-wrap\">\n        <Gallery/>\n      </div>\n      </div>\n    </MyProvider>\n  )\n}\n\nexport default App;\n\nconst rootElement = document.getElementById(\"app\");\nReactDOM.render(<App />, rootElement);"]},"metadata":{},"sourceType":"module"}