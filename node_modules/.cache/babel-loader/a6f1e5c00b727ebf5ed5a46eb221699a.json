{"ast":null,"code":"var _jsxFileName = \"/Users/bryancancel/Documents/sourceControl/b-cancel.github.io/react/portfolio/src/myButton.js\";\nimport React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\nimport { styled } from \"@mui/material/styles\";\nimport Zoom from \"@mui/material/Zoom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WhiteOnBlackToolTip = styled(({\n  className,\n  ...props\n}) => /*#__PURE__*/_jsxDEV(Tooltip, { ...props,\n  classes: {\n    popper: className\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this))(({\n  theme\n}) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    maxWidth: \"none\",\n    backgroundColor: \"black\",\n    color: \"white\",\n    fontSize: 12\n  }\n}));\nconst BlackOnWhiteTooltip = styled(({\n  className,\n  ...props\n}) => /*#__PURE__*/_jsxDEV(Tooltip, { ...props,\n  classes: {\n    popper: className\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 3\n}, this))(({\n  theme\n}) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    maxWidth: \"none\",\n    backgroundColor: \"white\",\n    color: \"black\",\n    fontSize: 12\n  }\n}));\nconst ErrorToolTip = styled(({\n  className,\n  ...props\n}) => /*#__PURE__*/_jsxDEV(Tooltip, { ...props,\n  classes: {\n    popper: className\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 3\n}, this))(({\n  theme\n}) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    maxWidth: \"none\",\n    backgroundColor: \"red\",\n    color: \"white\",\n    fontSize: 14,\n    fontWeight: \"bold\"\n  }\n})); /// variant, tooltip, color, onClick, suffixIcon, text, startIcon\n\nexport default function MyButton(props) {\n  var color = props.lightMode === undefined ? \"inherit\" : props.lightMode ? \"black\" : \"white\";\n\n  if (props.variant === \"contained\" && props.lightMode === undefined) {\n    color = \"default\";\n  }\n\n  const child = props.child ? props.child : /*#__PURE__*/_jsxDEV(Typography, {\n    style: {\n      textTransform: \"none\"\n    },\n    color: color,\n    children: props.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n  const computedStyle = props.variant === \"contained\" ? {\n    backgroundColor: color\n  } : {\n    borderColor: color\n  };\n\n  const theButton = /*#__PURE__*/_jsxDEV(Button, {\n    variant: props.variant,\n    onClick: props.onClick,\n    startIcon: props.prefixIcon,\n    endIcon: props.suffixIcon,\n    style: computedStyle,\n    sx: props.sx,\n    children: child\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n\n  var buttonWithToolTip = theButton;\n  const stringLength = props.tooltip ? props.tooltip.length : 0;\n  const hasTooltip = stringLength !== 0;\n\n  if (hasTooltip || props.repoIsPrivate) {\n    buttonWithToolTip = props.repoIsPrivate ? /*#__PURE__*/_jsxDEV(ErrorToolTip, {\n      title: \"Private Repository\",\n      TransitionComponent: Zoom,\n      placement: \"top\",\n      children: theButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this) : props.lightMode ? /*#__PURE__*/_jsxDEV(WhiteOnBlackToolTip, {\n      title: props.tooltip,\n      TransitionComponent: Zoom,\n      placement: \"top\",\n      children: theButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(BlackOnWhiteTooltip, {\n      title: props.tooltip,\n      TransitionComponent: Zoom,\n      placement: \"top\",\n      children: theButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (props.src) {\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      href: props.src,\n      target: \"_blank\",\n      rel: \"noreferrer\",\n      children: buttonWithToolTip\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  } else {\n    return buttonWithToolTip;\n  }\n}\n_c = MyButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyButton\");","map":{"version":3,"sources":["/Users/bryancancel/Documents/sourceControl/b-cancel.github.io/react/portfolio/src/myButton.js"],"names":["React","Typography","Button","Tooltip","tooltipClasses","styled","Zoom","WhiteOnBlackToolTip","className","props","popper","theme","tooltip","maxWidth","backgroundColor","color","fontSize","BlackOnWhiteTooltip","ErrorToolTip","fontWeight","MyButton","lightMode","undefined","variant","child","textTransform","text","computedStyle","borderColor","theButton","onClick","prefixIcon","suffixIcon","sx","buttonWithToolTip","stringLength","length","hasTooltip","repoIsPrivate","src"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\nimport { styled } from \"@mui/material/styles\";\nimport Zoom from \"@mui/material/Zoom\";\n\nconst WhiteOnBlackToolTip = styled(({ className, ...props }) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    maxWidth: \"none\",\n    backgroundColor: \"black\",\n    color: \"white\",\n    fontSize: 12,\n  },\n}));\n\nconst BlackOnWhiteTooltip = styled(({ className, ...props }) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    maxWidth: \"none\",\n    backgroundColor: \"white\",\n    color: \"black\",\n    fontSize: 12,\n  },\n}));\n\nconst ErrorToolTip = styled(({ className, ...props }) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    maxWidth: \"none\",\n    backgroundColor: \"red\",\n    color: \"white\",\n    fontSize: 14,\n    fontWeight: \"bold\",\n  },\n}));\n\n/// variant, tooltip, color, onClick, suffixIcon, text, startIcon\nexport default function MyButton(props) {\n  var color = props.lightMode === undefined ? \"inherit\" : (props.lightMode ? \"black\" : \"white\");\n  if(props.variant === \"contained\" && props.lightMode === undefined){\n    color = \"default\";\n  }\n\n  const child = props.child ? (\n    props.child\n  ) : (\n    <Typography style={{ textTransform: \"none\" }} color={color}>\n      {props.text}\n    </Typography>\n  );\n\n  const computedStyle =\n    props.variant === \"contained\"\n      ? {\n          backgroundColor: color,\n        }\n      : {\n          borderColor: color,\n        };\n\n  const theButton = (\n    <Button\n      variant={props.variant}\n      onClick={props.onClick}\n      startIcon={props.prefixIcon}\n      endIcon={props.suffixIcon}\n      style={computedStyle}\n      sx={props.sx}\n    >\n      {child}\n    </Button>\n  );\n\n  var buttonWithToolTip = theButton;\n  const stringLength = props.tooltip ? props.tooltip.length : 0;\n  const hasTooltip = stringLength !== 0;\n  if (hasTooltip || props.repoIsPrivate) {\n    buttonWithToolTip = props.repoIsPrivate ? (\n      <ErrorToolTip\n        title=\"Private Repository\"\n        TransitionComponent={Zoom}\n        placement=\"top\"\n      >\n        {theButton}\n      </ErrorToolTip>\n    ) : props.lightMode ? (\n      <WhiteOnBlackToolTip\n        title={props.tooltip}\n        TransitionComponent={Zoom}\n        placement=\"top\"\n      >\n        {theButton}\n      </WhiteOnBlackToolTip>\n    ) : (\n      <BlackOnWhiteTooltip\n        title={props.tooltip}\n        TransitionComponent={Zoom}\n        placement=\"top\"\n      >\n        {theButton}\n      </BlackOnWhiteTooltip>\n    );\n  }\n\n  if (props.src) {\n    return (\n      <a href={props.src} target=\"_blank\" rel=\"noreferrer\">\n        {buttonWithToolTip}\n      </a>\n    );\n  } else {\n    return buttonWithToolTip;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}