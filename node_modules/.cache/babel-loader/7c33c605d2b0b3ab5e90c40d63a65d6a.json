{"ast":null,"code":"var _jsxFileName = \"/Users/bryancancel/Documents/sourceControl/b-cancel.github.io/react/portfolio/src/myIconButton.js\";\nimport React from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Zoom from \"@mui/material/Zoom\";\nimport * as tooltip from './tooltips.js'; /// tooltip, color, onClick, icon\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyIconButton(props) {\n  const color = props.lightMode ? \"#202020\" : \"#e0e0e0\";\n\n  const iconButton = /*#__PURE__*/_jsxDEV(\"a\", {\n    href: props.src,\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    children: /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": props.tooltip,\n      component: \"span\",\n      onClick: props.onClick,\n      sx: props.sx,\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: props.icon,\n        color: color\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n\n  if (props.lightMode) {\n    return /*#__PURE__*/_jsxDEV(tooltip.WhiteOnBlack, {\n      title: props.tooltip,\n      TransitionComponent: Zoom,\n      placement: \"bottom\",\n      children: iconButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(tooltip.BlackOnWhite, {\n      title: props.tooltip,\n      TransitionComponent: Zoom,\n      placement: \"top\",\n      children: iconButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n}\n_c = MyIconButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyIconButton\");","map":{"version":3,"sources":["/Users/bryancancel/Documents/sourceControl/b-cancel.github.io/react/portfolio/src/myIconButton.js"],"names":["React","IconButton","FontAwesomeIcon","Zoom","tooltip","MyIconButton","props","color","lightMode","iconButton","src","onClick","sx","icon"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAO,KAAKC,OAAZ,MAAyB,eAAzB,C,CAEA;;;AACA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC1C,QAAMC,KAAK,GAAGD,KAAK,CAACE,SAAN,GAAkB,SAAlB,GAA8B,SAA5C;;AACA,QAAMC,UAAU,gBACd;AAAG,IAAA,IAAI,EAAEH,KAAK,CAACI,GAAf;AAAoB,IAAA,MAAM,EAAC,QAA3B;AAAoC,IAAA,GAAG,EAAC,YAAxC;AAAA,2BACE,QAAC,UAAD;AACE,oBAAYJ,KAAK,CAACF,OADpB;AAEE,MAAA,SAAS,EAAC,MAFZ;AAGE,MAAA,OAAO,EAAEE,KAAK,CAACK,OAHjB;AAIE,MAAA,EAAE,EAAEL,KAAK,CAACM,EAJZ;AAAA,6BAME,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAEN,KAAK,CAACO,IAA7B;AAAmC,QAAA,KAAK,EAAEN;AAA1C;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;;AAaA,MAAID,KAAK,CAACE,SAAV,EAAqB;AACnB,wBACE,QAAC,OAAD,CAAS,YAAT;AACE,MAAA,KAAK,EAAEF,KAAK,CAACF,OADf;AAEE,MAAA,mBAAmB,EAAED,IAFvB;AAGE,MAAA,SAAS,EAAC,QAHZ;AAAA,gBAKGM;AALH;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAVD,MAUO;AACL,wBACE,QAAC,OAAD,CAAS,YAAT;AACE,MAAA,KAAK,EAAEH,KAAK,CAACF,OADf;AAEE,MAAA,mBAAmB,EAAED,IAFvB;AAGE,MAAA,SAAS,EAAC,KAHZ;AAAA,gBAKGM;AALH;AAAA;AAAA;AAAA;AAAA,YADF;AASD;AACF;KApCuBJ,Y","sourcesContent":["import React from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Zoom from \"@mui/material/Zoom\";\nimport * as tooltip from './tooltips.js';\n\n/// tooltip, color, onClick, icon\nexport default function MyIconButton(props) {\n  const color = props.lightMode ? \"#202020\" : \"#e0e0e0\";\n  const iconButton = (\n    <a href={props.src} target=\"_blank\" rel=\"noreferrer\">\n      <IconButton\n        aria-label={props.tooltip}\n        component=\"span\"\n        onClick={props.onClick}\n        sx={props.sx}\n      >\n        <FontAwesomeIcon icon={props.icon} color={color}/>\n      </IconButton>\n    </a>\n  );\n\n  if (props.lightMode) {\n    return (\n      <tooltip.WhiteOnBlack\n        title={props.tooltip}\n        TransitionComponent={Zoom}\n        placement=\"bottom\"\n      >\n        {iconButton}\n      </tooltip.WhiteOnBlack>\n    );\n  } else {\n    return (\n      <tooltip.BlackOnWhite\n        title={props.tooltip}\n        TransitionComponent={Zoom}\n        placement=\"top\"\n      >\n        {iconButton}\n      </tooltip.BlackOnWhite>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}