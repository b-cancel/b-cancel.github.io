{"ast":null,"code":"var _jsxFileName = \"/Users/bryancancel/Documents/sourceControl/b-cancel.github.io/react/portfolio/src/visible.js\";\nimport React, { Component } from 'react';\nimport Observer from '@researchgate/react-intersection-observer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getPrintableThreshold = (ratio, range) => range.reduce((prev, curr) => Math.abs(curr - ratio) < Math.abs(prev - ratio) ? curr : prev);\n\nexport default class ShowIfVisible extends Component(props) {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      visibility: 'hidden',\n      threshold: props.threshold\n    };\n\n    this.handleChange = ({\n      isIntersecting,\n      intersectionRatio\n    }) => {\n      this.setState({\n        visibility: isIntersecting ? 'visible' : 'invisible',\n        threshold: getPrintableThreshold(intersectionRatio.toFixed(2), [0.75])\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Observer, {\n      onChange: this.handleChange,\n      threshold: this.props.threshold,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `box ${this.state.visibility}`,\n        height: \"100px\",\n        width: \"100px\",\n        \"background-color\": \"red\",\n        class: \"findme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/bryancancel/Documents/sourceControl/b-cancel.github.io/react/portfolio/src/visible.js"],"names":["React","Component","Observer","getPrintableThreshold","ratio","range","reduce","prev","curr","Math","abs","ShowIfVisible","props","state","visibility","threshold","handleChange","isIntersecting","intersectionRatio","setState","toFixed","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,2CAArB;;;AAEA,MAAMC,qBAAqB,GAAG,CAACC,KAAD,EAAQC,KAAR,KAC5BA,KAAK,CAACC,MAAN,CAAa,CAACC,IAAD,EAAOC,IAAP,KACXC,IAAI,CAACC,GAAL,CAASF,IAAI,GAAGJ,KAAhB,IAAyBK,IAAI,CAACC,GAAL,CAASH,IAAI,GAAGH,KAAhB,CAAzB,GAAkDI,IAAlD,GAAyDD,IAD3D,CADF;;AAIA,eAAe,MAAMI,aAAN,SAA4BV,SAAS,CAAEW,KAAF,CAArC,CAA8C;AAAA;AAAA;AAAA,SAC3DC,KAD2D,GACnD;AACNC,MAAAA,UAAU,EAAE,QADN;AAENC,MAAAA,SAAS,EAAEH,KAAK,CAACG;AAFX,KADmD;;AAAA,SAM3DC,YAN2D,GAM5C,CAAC;AAAEC,MAAAA,cAAF;AAAkBC,MAAAA;AAAlB,KAAD,KAA2C;AACxD,WAAKC,QAAL,CAAc;AACZL,QAAAA,UAAU,EAAEG,cAAc,GAAG,SAAH,GAAe,WAD7B;AAEZF,QAAAA,SAAS,EAAEZ,qBAAqB,CAC9Be,iBAAiB,CAACE,OAAlB,CAA0B,CAA1B,CAD8B,EAE9B,CAAC,IAAD,CAF8B;AAFpB,OAAd;AAOD,KAd0D;AAAA;;AAgB3DC,EAAAA,MAAM,GAAG;AACP,wBACI,QAAC,QAAD;AACA,MAAA,QAAQ,EAAE,KAAKL,YADf;AAEA,MAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWG,SAFtB;AAAA,6BAIA;AAAK,QAAA,SAAS,EAAG,OAAM,KAAKF,KAAL,CAAWC,UAAW,EAA7C;AAAgD,QAAA,MAAM,EAAC,OAAvD;AAA+D,QAAA,KAAK,EAAC,OAArE;AAA6E,4BAAiB,KAA9F;AAAoG,QAAA,KAAK,EAAC;AAA1G;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQD;;AAzB0D","sourcesContent":["import React, { Component } from 'react';\nimport Observer from '@researchgate/react-intersection-observer';\n\nconst getPrintableThreshold = (ratio, range) =>\n  range.reduce((prev, curr) =>\n    Math.abs(curr - ratio) < Math.abs(prev - ratio) ? curr : prev);\n\nexport default class ShowIfVisible extends Component (props) {\n  state = {\n    visibility: 'hidden',\n    threshold: props.threshold,\n  };\n\n  handleChange = ({ isIntersecting, intersectionRatio }) => {\n    this.setState({\n      visibility: isIntersecting ? 'visible' : 'invisible',\n      threshold: getPrintableThreshold(\n        intersectionRatio.toFixed(2),\n        [0.75]\n      ),\n    });\n  };\n\n  render() {\n    return (\n        <Observer\n        onChange={this.handleChange}\n        threshold={this.props.threshold}\n      >\n        <div className={`box ${this.state.visibility}`} height=\"100px\" width=\"100px\" background-color=\"red\" class=\"findme\"/>\n      </Observer>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}