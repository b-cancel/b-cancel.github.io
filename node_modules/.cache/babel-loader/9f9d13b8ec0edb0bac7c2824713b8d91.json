{"ast":null,"code":"var _jsxFileName = \"/Users/bryancancel/Documents/sourceControl/b-cancel.github.io/src/tooltips.js\";\nimport React from \"react\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WhiteOnBlack = withStyles({\n  tooltip: {\n    color: \"#e0e0e0\",\n    backgroundColor: \"#202020\",\n    fontSize: \"12px\",\n    maxWidth: \"none\"\n  }\n})(Tooltip);\nconst BlackOnWhite = withStyles({\n  tooltip: {\n    color: \"#202020\",\n    backgroundColor: \"#e0e0e0\",\n    fontSize: \"12px\",\n    maxWidth: \"none\"\n  }\n})(Tooltip);\nconst WhiteOnRed = withStyles({\n  tooltip: {\n    color: \"#e0e0e0\",\n    backgroundColor: \"red\",\n    fontSize: \"12px\",\n    maxWidth: \"none\",\n    fontWeight: \"bold\"\n  }\n})(Tooltip); ///child\n\nexport default function MyToolTip(props) {\n  if (props.type === \"whiteOnBlack\") {\n    return /*#__PURE__*/_jsxDEV(WhiteOnBlack, {\n      title: props.title,\n      placement: props.placement,\n      children: props.child\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  } else if (props.type === \"blackOnWhite\") {\n    return /*#__PURE__*/_jsxDEV(BlackOnWhite, {\n      title: props.title,\n      placement: props.placement,\n      children: props.child\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(WhiteOnRed, {\n      title: props.title,\n      placement: props.placement,\n      children: props.child\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n}\n_c = MyToolTip;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyToolTip\");","map":{"version":3,"sources":["/Users/bryancancel/Documents/sourceControl/b-cancel.github.io/src/tooltips.js"],"names":["React","Tooltip","withStyles","WhiteOnBlack","tooltip","color","backgroundColor","fontSize","maxWidth","BlackOnWhite","WhiteOnRed","fontWeight","MyToolTip","props","type","title","placement","child"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,MAAMC,YAAY,GAAGD,UAAU,CAAC;AAC9BE,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE,SADA;AAEPC,IAAAA,eAAe,EAAE,SAFV;AAGPC,IAAAA,QAAQ,EAAE,MAHH;AAIPC,IAAAA,QAAQ,EAAE;AAJH;AADqB,CAAD,CAAV,CAOlBP,OAPkB,CAArB;AASA,MAAMQ,YAAY,GAAGP,UAAU,CAAC;AAC9BE,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE,SADA;AAEPC,IAAAA,eAAe,EAAE,SAFV;AAGPC,IAAAA,QAAQ,EAAE,MAHH;AAIPC,IAAAA,QAAQ,EAAE;AAJH;AADqB,CAAD,CAAV,CAOlBP,OAPkB,CAArB;AASA,MAAMS,UAAU,GAAGR,UAAU,CAAC;AAC5BE,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE,SADA;AAEPC,IAAAA,eAAe,EAAE,KAFV;AAGPC,IAAAA,QAAQ,EAAE,MAHH;AAIPC,IAAAA,QAAQ,EAAE,MAJH;AAKPG,IAAAA,UAAU,EAAE;AALL;AADmB,CAAD,CAAV,CAQhBV,OARgB,CAAnB,C,CAUA;;AACA,eAAe,SAASW,SAAT,CAAmBC,KAAnB,EAA0B;AACvC,MAAIA,KAAK,CAACC,IAAN,KAAe,cAAnB,EAAmC;AACjC,wBACE,QAAC,YAAD;AACE,MAAA,KAAK,EAAED,KAAK,CAACE,KADf;AAEE,MAAA,SAAS,EAAEF,KAAK,CAACG,SAFnB;AAAA,gBAIGH,KAAK,CAACI;AAJT;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,GATD,MASO,IAAIJ,KAAK,CAACC,IAAN,KAAe,cAAnB,EAAmC;AACxC,wBACE,QAAC,YAAD;AACE,MAAA,KAAK,EAAED,KAAK,CAACE,KADf;AAEE,MAAA,SAAS,EAAEF,KAAK,CAACG,SAFnB;AAAA,gBAIGH,KAAK,CAACI;AAJT;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,GATM,MASA;AACL,wBACE,QAAC,UAAD;AACE,MAAA,KAAK,EAAEJ,KAAK,CAACE,KADf;AAEE,MAAA,SAAS,EAAEF,KAAK,CAACG,SAFnB;AAAA,gBAIGH,KAAK,CAACI;AAJT;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;AACF;KA7BuBL,S","sourcesContent":["import React from \"react\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst WhiteOnBlack = withStyles({\n  tooltip: {\n    color: \"#e0e0e0\",\n    backgroundColor: \"#202020\",\n    fontSize: \"12px\",\n    maxWidth: \"none\",\n  },\n})(Tooltip);\n\nconst BlackOnWhite = withStyles({\n  tooltip: {\n    color: \"#202020\",\n    backgroundColor: \"#e0e0e0\",\n    fontSize: \"12px\",\n    maxWidth: \"none\",\n  },\n})(Tooltip);\n\nconst WhiteOnRed = withStyles({\n  tooltip: {\n    color: \"#e0e0e0\",\n    backgroundColor: \"red\",\n    fontSize: \"12px\",\n    maxWidth: \"none\",\n    fontWeight: \"bold\",\n  },\n})(Tooltip);\n\n///child\nexport default function MyToolTip(props) {\n  if (props.type === \"whiteOnBlack\") {\n    return (\n      <WhiteOnBlack\n        title={props.title}\n        placement={props.placement}\n      >\n        {props.child}\n      </WhiteOnBlack>\n    );\n  } else if (props.type === \"blackOnWhite\") {\n    return (\n      <BlackOnWhite\n        title={props.title}\n        placement={props.placement}\n      >\n        {props.child}\n      </BlackOnWhite>\n    );\n  } else {\n    return (\n      <WhiteOnRed\n        title={props.title}\n        placement={props.placement}\n      >\n        {props.child}\n      </WhiteOnRed>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}