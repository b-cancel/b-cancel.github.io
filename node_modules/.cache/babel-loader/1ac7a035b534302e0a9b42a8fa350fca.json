{"ast":null,"code":"var _jsxFileName = \"/Users/bryancancel/Documents/sourceControl/b-cancel.github.io/react/portfolio/src/tools/iconTool.js\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MyToolTip from \"../tooltips\"; //TODO: show a black icon \n//TODO: on hover color that icon in\n//TODO: it also and it displays title of what is being hovered over\n//TODO: and it links to that tech stacks page with a link tag\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function IconTool(props) {\n  var theClassName = props.tip;\n  theClassName = theClassName.replaceAll(' ', '');\n  theClassName = theClassName.replaceAll(',', '');\n  theClassName = theClassName.replaceAll('.', '');\n  const hoverCode = props.hoverColor ? `color: ${props.hoverColor};` : 'opacity:0.5;';\n\n  const tool = /*#__PURE__*/_jsxDEV(\"a\", {\n    href: props.src,\n    target: \"_blank\",\n    rel: \"noreferrer\",\n    className: \"icon\",\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      dangerouslySetInnerHTML: {\n        __html: `\n              .${theClassName}{\n                  font-size: ${props.size}px;\n                  color: black;\n              }\n\n              .${theClassName}:hover{\n                  ${hoverCode}\n            }\n                `\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: props.icon,\n      size: \"lg\",\n      className: theClassName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(MyToolTip, {\n    title: props.tip,\n    placement: \"top\",\n    child: tool,\n    type: \"whiteOnBlack\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 13\n  }, this);\n}\n_c = IconTool;\n\nvar _c;\n\n$RefreshReg$(_c, \"IconTool\");","map":{"version":3,"sources":["/Users/bryancancel/Documents/sourceControl/b-cancel.github.io/react/portfolio/src/tools/iconTool.js"],"names":["React","FontAwesomeIcon","MyToolTip","IconTool","props","theClassName","tip","replaceAll","hoverCode","hoverColor","tool","src","__html","size","icon"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CAEA;AACA;AACA;AACA;;;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACpC,MAAIC,YAAY,GAAGD,KAAK,CAACE,GAAzB;AACAD,EAAAA,YAAY,GAAGA,YAAY,CAACE,UAAb,CAAwB,GAAxB,EAA4B,EAA5B,CAAf;AACAF,EAAAA,YAAY,GAAGA,YAAY,CAACE,UAAb,CAAwB,GAAxB,EAA4B,EAA5B,CAAf;AACAF,EAAAA,YAAY,GAAGA,YAAY,CAACE,UAAb,CAAwB,GAAxB,EAA4B,EAA5B,CAAf;AACA,QAAMC,SAAS,GAAGJ,KAAK,CAACK,UAAN,GAAoB,UAASL,KAAK,CAACK,UAAW,GAA9C,GAAmD,cAArE;;AACA,QAAMC,IAAI,gBAEV;AAAG,IAAA,IAAI,EAAEN,KAAK,CAACO,GAAf;AAAoB,IAAA,MAAM,EAAC,QAA3B;AAAoC,IAAA,GAAG,EAAC,YAAxC;AAAqD,IAAA,SAAS,EAAC,MAA/D;AAAA,4BACI;AACI,MAAA,uBAAuB,EAAE;AACvBC,QAAAA,MAAM,EAAG;AACvB,iBAAiBP,YAAa;AAC9B,+BAA+BD,KAAK,CAACS,IAAK;AAC1C;AACA;AACA;AACA,iBAAiBR,YAAa;AAC9B,oBAAoBG,SAAU;AAC9B;AACA;AAVqC;AAD7B;AAAA;AAAA;AAAA;AAAA,YADJ,eAeI,QAAC,eAAD;AAAiB,MAAA,IAAI,EAAEJ,KAAK,CAACU,IAA7B;AAAmC,MAAA,IAAI,EAAC,IAAxC;AAA6C,MAAA,SAAS,EAAET;AAAxD;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA;;AAqBA,sBAAQ,QAAC,SAAD;AACJ,IAAA,KAAK,EAAED,KAAK,CAACE,GADT;AAEJ,IAAA,SAAS,EAAC,KAFN;AAGJ,IAAA,KAAK,EAAEI,IAHH;AAIJ,IAAA,IAAI,EAAC;AAJD;AAAA;AAAA;AAAA;AAAA,UAAR;AAMH;KAjCuBP,Q","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MyToolTip from \"../tooltips\";\n\n//TODO: show a black icon \n//TODO: on hover color that icon in\n//TODO: it also and it displays title of what is being hovered over\n//TODO: and it links to that tech stacks page with a link tag\n\nexport default function IconTool(props) {\n    var theClassName = props.tip;\n    theClassName = theClassName.replaceAll(' ','');\n    theClassName = theClassName.replaceAll(',','');\n    theClassName = theClassName.replaceAll('.','');\n    const hoverCode = props.hoverColor ? `color: ${props.hoverColor};` : 'opacity:0.5;'; \n    const tool = (\n        \n    <a href={props.src} target=\"_blank\" rel=\"noreferrer\" className=\"icon\">\n        <style\n            dangerouslySetInnerHTML={{\n              __html: `\n              .${theClassName}{\n                  font-size: ${props.size}px;\n                  color: black;\n              }\n\n              .${theClassName}:hover{\n                  ${hoverCode}\n            }\n                `,\n            }}\n          />\n        <FontAwesomeIcon icon={props.icon} size=\"lg\" className={theClassName}/>\n    </a>\n    );\n\n    return (<MyToolTip\n        title={props.tip}\n        placement=\"top\"\n        child={tool}\n        type=\"whiteOnBlack\" />\n        );\n}"]},"metadata":{},"sourceType":"module"}